//bubble sort                                       why??
also known as sinking sort                              with the first pass through the
or exchange sort                                         array the largest no came at the end
arr=[2,7,0,5,9,3,1,6]
step 1-pass no.1 
swap 1 7->0 greater no take left position
[2,0,7,5,9,3,1,6]
swap2 [2,0,5,7,9,3,1,6]
swap3 [2,0,5,7,3,9,1,6]
swap4 [2,0,5,7,3,1,9,6]
swap4 [2,0,5,7,3,1,6,9] end of pass 1

pass 2-
swap 1 [0,2,5,7,3,1,6,9]
swap 2 [0,2,5,3,7,1,6,9]
swap 3 [0,2,5,3,1,7,6,9]
swap 4 [0,2,5,3,1,6,7,9]

pass 3-
swap 1 [0,2,3,5,1,6,7,9]
swap 2 [0,2,3,1,5,6,7,9]

pass 4-
swap 1 [0,2,1,3,5,6,7,9]

pass5-
swap 1 [0,1,2,3,5,6,7,9] //done sorting

space complexity-O(1)//constant //no extra space required that is copying the array,etc not required
//also inplace sorting algorithm
time complexity
// BEST CASE=O(N) Sorted
//WORST CASE=O(N^2) Sorted in opposite
as the size of array is growing the no of comparison is also growing

when j never swaps for a value of i means ith pass it means array is sorted hence you can end the program
best case comparison N-1=N IN TIME Complexity constants are ignored

sorting stability
check kunal video bubble sort

